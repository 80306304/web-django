"""
Django settings for DjangoProject1 project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3u^_-@cyuq-k1647hyq$v5xn#66x0@e1z30j5xdt9#!pi2bp7q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'api.apps.ApiConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'django_celery_results',
]

AUTH_USER_MODEL = 'api.CustomUser'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",  # 开发环境常见端口
#     "http://127.0.0.1:3000",
#     "http://203.2.160.91:8000",
# ]
CORS_ALLOW_ALL_ORIGINS = True
# DRF 全局配置：使用 JWT 作为认证方式
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}
CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
]
# JWT 自定义配置（可选，不配置则使用默认值）
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),  # 访问 token 有效期
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),    # 刷新 token 有效期
    'ROTATE_REFRESH_TOKENS': False,                  # 刷新时是否生成新的 refresh token
    'ALGORITHM': 'HS256',                           # 加密算法（默认 HS256）
    'SIGNING_KEY': SECRET_KEY,                      # 签名密钥（直接使用 Django 项目的 SECRET_KEY）
}

ROOT_URLCONF = 'DjangoProject1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoProject1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# 默认的sqlite配置
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',  # 指定PostgreSQL引擎
        'NAME': 'postgres',               # 数据库名
        'USER': 'liyx',                    # 数据库用户名
        'PASSWORD': 'Lyx121216',                # 数据库密码
        'HOST': '203.2.160.91',                        # 数据库主机（本地填localhost）
        'PORT': '5432',                             # 数据库端口（默认5432）
        'OPTIONS': {
            'client_encoding': 'UTF8',              # 设置客户端编码为UTF-8
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AES_SECRET_KEY = ""
AES_IV = ""

RSA_PUBLIC_KEY = '''
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAj8JYItzbxZu7YEEvNbPi
C4EWDeA5Spe7I33XRzriq0y9He2b3s4v5b17rQd6W2qiQiAmfR8gxGptysU3Sdgj
tf1ueQO0wblRUH7LjkSEYojHpQ+JGoCX380iIIFjl3jQtnhyVrij/Gsj7I81hb2y
qZWEPtdXbvUpHJabOCu3TdprsoGjPNVxmv1vMAkrOSkaZ5zky7zyI8tyKpARzwZD
Yp0gTaAoQvPx8NT9oCvMdfCy+YIBt+d3rFyDN+9OFbjuAcKUBeOyVHHkflfAjInn
MFEGmHFmdv3xAu1TWQ6vBIhF9RTKquKbxx3SU7k0rk3lKaAFGVjR+1lC3tQOnuSG
3wIDAQAB
-----END PUBLIC KEY-----
'''

RSA_PRIVATE_KEY='''
-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAj8JYItzbxZu7YEEvNbPiC4EWDeA5Spe7I33XRzriq0y9He2b
3s4v5b17rQd6W2qiQiAmfR8gxGptysU3Sdgjtf1ueQO0wblRUH7LjkSEYojHpQ+J
GoCX380iIIFjl3jQtnhyVrij/Gsj7I81hb2yqZWEPtdXbvUpHJabOCu3TdprsoGj
PNVxmv1vMAkrOSkaZ5zky7zyI8tyKpARzwZDYp0gTaAoQvPx8NT9oCvMdfCy+YIB
t+d3rFyDN+9OFbjuAcKUBeOyVHHkflfAjInnMFEGmHFmdv3xAu1TWQ6vBIhF9RTK
quKbxx3SU7k0rk3lKaAFGVjR+1lC3tQOnuSG3wIDAQABAoIBAAwH0xFj0z6HyFgH
THidi6qzzFEv9QtxhDc1pkjvPB3ix6bUBinQroB26X0y9YHl/Bs1jpMFAlx9nZ+M
/pH+9QobYd3dughGRnBKlCVdRYjrcm21TZ96qHsRsyvuOBPqh+jlTohEXnDW1IRM
/ckp9WQsv4r0wXvnJ2AdmHLMccQhhaSwdFDPtXMQngappTdTcr6J4iVvAKL8ZgUu
8KkB3u1ueF4obgPRNs/8cv+5TaEIjVysoFX7E0LqCUEAVgsrmoP5G8388q8G++01
IBLfypnRbvuFvDyD08gYvU6Kjga7e7j858uamIO/L7KgKmzx39DegLxC/XhJF2dE
iQf90KUCgYEAuIaxw+LEV7GtSR0cioFXnRlC/U31rtvTvRwGD62hIszvtKjKd42L
N9JWgOSK9xtjHtu4HLt/SHRowp0rIwpjUo1GqWsVYJcgtFVOFlyynYkuDmDh8Tlk
ckJDgcI+8N5QYvSccCzXH8kFL1Qv1TjW5cakE04MRr8ctqJMWKhjFmUCgYEAx3FD
R/dGFzzuivn9pbDDLgCgxlABL4mMEd7EXKO9NbcaWcK3qzxjZlkPvytn0wcKGCev
ScGxAznaHmxvZo6hQxGL3fNjGB4v+sa10dzDH9k4K5ZN9UOSPxC8nFdEaKWfax0B
084xwQMI3MsIB03eZfipk/v+9LZjKgjcjj1SYfMCgYBTnW12Bw7TcgbEx7VEKeIK
pQTPBYGbr68d1VIFzrbirxy7r3S3geMg82YRV/6EhNuAgy3Fj0zZBy7laRS/9xgU
s0HeyVBRiYnfTXxp861YZ24AQ/R+O3SBtfcjGGMvAH5KqO8ugZMlqxB3Zt2Z7/yo
+D8nJEm50SXwuFCCKCNmZQKBgDFB3fYWMi9nExsr5uNXJr1j1lFkTQaql/eJ50Fi
B0cO8+kbWDVocrxCXss+MyRBZtLUakxzE/7R+PbunQzdSSLBYKPuipjYS81J6nns
Zhylj2PkeViL2cDNp2eNfg3Caf8QaPUgxdT/pN6zHkZ/it/wbCFqaWuS6CbnjWFr
777VAoGAPeMqsL/cDH1GK1xIK6cP1q4ccgflNsmUeXgbGzsgh5h2iIk8uVyGso5t
JQiIp2r/CDrj8u95SBy/6rzv/EYJZTeGHESABgcZPvwVjo08/Ii/FRvVTD4q9SOq
APYje30GdGdLBq7cpjCl/bALkeinuqxLW4dWcpbxmDC6hKKaFMM=
-----END RSA PRIVATE KEY-----
'''
# 配置 RabbitMQ 作为 Celery 的 Broker
CELERY_BROKER_URL = 'amqp://liyx:liyx@203.2.160.91:5672//'  # 格式：amqp://用户名:密码@主机:端口/虚拟主机
# 如果使用默认配置（guest/guest，本地），则简化为：
# CELERY_BROKER_URL = 'amqp://localhost:5672//'

# 配置任务结果存储（使用 django-celery-results）
CELERY_RESULT_BACKEND = 'django-db'  # 存储到 Django 数据库
CELERY_RESULT_SERIALIZER = 'json'  # 结果序列化格式